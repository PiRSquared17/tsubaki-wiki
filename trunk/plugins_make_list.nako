＃プラグイン取り込みと、プラグイン呼出の自動生成
＃2010 Copyright Yutaka Kachi
＃
＃呼び出すプラグイン(plugins)のために
＃取り込みプログラムと呼出プログラムを生成する
＃
＃2010-08-18:
＃内部プラグインと外部プラグインの生成ファイルを分離する
＃本体プログラムで、モジュールの呼出順を整理するため。


＃ここから、「取り込み」プログラム(plugins_list.nako)の生成
＃指定フォルダのnakoファイルを列挙し、
＃「取り込み」プログラムを生成する

プラグインフォルダ＝「plugins」
ファイル一覧＝「{プラグインフォルダ}\*.nako」のファイル列挙


#####取り込み - 内部 #####
生成プログラム＝「plugins_list_inc.nako」
モード＝「内部」
ファイル名パターン＝「\Ainc_」

ファイル名パターンで呼出ファイル列挙
それを生成プログラムに保存

#####取り込み - 外部 #####
生成プログラム＝「plugins_list_ext.nako」
モード＝「外部」
ファイル名パターン＝「\Aext_」

ファイル名パターンで呼出ファイル列挙
それを生成プログラムに保存


### ここから、呼出プログラムの生成

#####取り込み - 内部 #####
生成プログラム＝「plugins_call_inc.nako」
生成コード＠モード＝「内部」
生成コード＠ファイル名パターン＝「\Ainc_」
生成コード＠プラグインパターン＝「＃プラグイン\Z」

書込文＝「」

書込文＝生成コードでプラグイン名列挙

書込文を生成プログラムに保存


#####取り込み - 外部 #####
生成プログラム＝「plugins_call_ext.nako」
生成コード＠モード＝「外部」
生成コード＠ファイル名パターン＝「\Aext」
生成コード＠プラグインパターン＝「＃プラグイン\Z」

書込文＝「」

書込文＝生成コードでプラグイン名列挙

書込文を生成プログラムに保存

「生成完了」を言う
終了


●プラグイン名列挙(プラグインコードで)
    生成文＝「」
    プラグイン文＝「」

    #準備処理
    ヘッダー＝「＃プラグイン呼出分岐_{プラグインコード＠モード}
    ＃自動生成 Date{今日}, Time{今}{改行}」
    
    生成文にヘッダーを一行追加
    
    #読み取り
    ファイル一覧を反復
    
		ファイル名＝対象
		ファイル名をプラグインコード＠ファイル名パターンで正規表現マッチ
		もし、それが空ならば、続ける
    
		ファイルパス＝「{プラグインフォルダ}\{対象}」
		読込テキスト＝ファイルパスを開く
    
		読込テキストを反復
			対象文＝対象
			対象文をプラグインコード＠プラグインパターンで正規表現マッチ
			もし、それが空でなければ、
				対象文からプラグイン名分離
				プラグイン文にそれを一行追加
    
    
    #分岐文生成
    分岐文とは文字列
    分岐文＝プラグイン文とプラグインコード＠モードで分岐文作成
    生成文に分岐文を一行追加

	生成文で戻る



●呼出ファイル列挙(パターンで)
    書込文とは文字列

    ヘッダーは「＃プラグイン取込プログラム_{モード}
    ＃自動生成 Date{今日}, Time{今}」
    
    書込文にヘッダーを一行追加
    
    一覧文とは文字列
    ファイル一覧を反復
		対象をパターンで正規表現マッチ
		もし、それが空でなければ、
			一覧文に「!"{プラグインフォルダ}\{対象}"を取り込む」を一行追加

    書込文に一覧文を一行追加
    書込文で戻る



●プラグイン名分離(該当行から)
	パターン＝「\A●.*\(」
	該当行をパターンで正規表現マッチ
	もし、それが空でなければ、
		対象文＝それの「●」を「」へ正規表現置換
		対象文＝対象文の「\(」を「」へ正規表現置換
	対象文で戻る



●分岐文作成(プラグイン名と、区別で)
    分岐文とは文字列

    区別で分岐文_先頭する
    分岐文にそれを一行追加

    プラグイン名を反復
		対象の条件文作成
		分岐文にそれを一行追加

    区別で分岐文_末尾する
    分岐文にそれを一行追加

    分岐文で戻る


●分岐文_先頭(区別で)
	先頭文＝「●プラグイン呼出_{区別}(処理フォームで、プラグイン名を)
	プラグイン名で条件分岐」
	先頭文で戻る


●条件文作成(プラグイン名の)
	条件文とは文字列

	条件文に「		{[}{プラグイン名}{]}ならば」を一行追加
	条件文に「			処理フォームで{プラグイン名}」を一行追加

	条件文で戻る

●分岐文_末尾(区別で)
	末尾文＝「		違えば
			{[}{区別}からの{プラグイン名}の呼出に失敗しました。{]}で戻る。」

	末尾文で戻る

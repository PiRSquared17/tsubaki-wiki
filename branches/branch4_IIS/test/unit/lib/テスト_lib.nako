#===========================================================
# 主ライブラリのテスト
#===========================================================

テストlibパス＝テストパス＆「lib\」
#テストlibパス＝テストパス

●テスト_主_ブロック切り出し１
	#「\A\-」が連続しているブロックを切り出す
	パターン＝「\A\-」


	テスト文に「{テストlibパス}テスト_主_ブロック切り出し1_テスト文.txt」を開く
	テスト配列＝テスト文を改行で区切る

	結果文に「{テストlibパス}テスト_主_ブロック切り出し1_結果文.txt」を開く
	結果配列＝結果文を改行で区切る

	(テスト配列をパターンでブロック切り出し)と結果配列でテスト実行。


●テスト_主_ブロック切り出し２
	#段落ブロックを切り出す
	パターン＝「\A[^-\*+#\s\Z]」

	テスト文に「{テストlibパス}テスト_主_ブロック切り出し2_テスト文.txt」を開く
	テスト配列＝テスト文を改行で区切る

	結果文に「{テストlibパス}テスト_主_ブロック切り出し2_結果文.txt」を開く
	結果配列＝結果文を改行で区切る

	(テスト配列をパターンでブロック切り出し)と結果配列でテスト実行。


●テスト_主_ブロック切り出し３
	#ブロック切り出しの副作用を評価
	#関数の副作用により、引数の値が変化していることを確認
	パターン＝「\A[^-\*+#\s\Z]」

	テスト文に「{テストlibパス}テスト_主_ブロック切り出し3_テスト文.txt」を開く
	テスト配列＝テスト文を改行で区切る

	結果文に「{テストlibパス}テスト_主_ブロック切り出し3_結果文.txt」を開く
	結果配列＝結果文を改行で区切る

	(テスト配列をパターンでブロック切り出し３_副作用)と結果配列でテスト実行。


●ブロック切り出し３_副作用(テキスト配列をパターンで)
	テキスト配列をパターンでブロック切り出し
	テキスト配列で戻る


●テスト_主_html無害化
	テスト文＝「&"<>」
	結果文＝「&amp;&quot;&lt;&gt;」
	(テスト文をhtml無害化)と結果文でテスト実行。

	テスト文＝「abcde」
	結果文＝「abcde」
	(テスト文をhtml無害化)と結果文でテスト実行。


●テスト_主_正規表現全抽出2
	パターン文＝「（.*?）」
	本文＝「吾輩（わがはい）は猫である。」
	結果＝「（わがはい）」

	(本文からパターン文で正規表現全抽出2)と結果でテスト実行。



